plugins {
  id 'groovy'
  id 'java'
//  id "io.freefair.lombok" version "4.1.3"
  id 'checkstyle'
  id "jacoco"
//  id "application"
  id 'org.openjfx.javafxplugin' version '0.0.8'
//  id "org.javamodularity.moduleplugin" version "1.6.0"
//  id 'org.beryx.jlink' version '2.16.4'
  id 'org.beryx.runtime' version '1.8.0'
//  id 'com.github.johnrengelman.shadow' version '5.2.0'
}

Properties versions = new Properties()
versions.load(new FileInputStream(rootProject.projectDir.path + "/version.properties"))


group 'net.in.rrrekin.ittoolbox'
version versions.version

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

repositories {
  mavenCentral()
//  maven { url 'https://repo.spring.io/plugins-release/' }
}

checkstyle.toolVersion '8.25'

def javafxModules = ['javafx.controls', 'javafx.fxml', 'javafx.media', 'javafx.web']
javafx {
  version = versions.javaFx
  modules = javafxModules
}

jar {
  manifest {
    attributes 'Application-Name': 'IT Toolbox'
  }
}


//jlink {
//  launcher {
//    name = 'it-toolbox'
//  }
//  mergedModule {
//    requires 'java.naming'
//    requires 'java.xml'
////    requires 'org.apache.commons.lang3'
//  }
//
//}
runtime {
//  options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
  modules = ['java.se', 'java.scripting']
}

dependencies {
  implementation "org.codehaus.groovy:groovy-all:${versions.groovy}"
  implementation "com.google.guava:guava:${versions.guava}"
  implementation "org.yaml:snakeyaml:${versions.snakeyaml}"
  implementation "ch.qos.logback:logback-classic:${versions.logback}"
  implementation "com.google.inject:guice:${versions.guice}:no_aop"
  implementation "org.apache.commons:commons-text:${versions.commonText}"
  implementation "org.controlsfx:controlsfx:${versions.controlsFx}"
  implementation "com.google.code.gson:gson:${versions.gson}"

  implementation "com.ibm.icu:icu4j:${versions.icu}"
  compileOnly "org.jetbrains:annotations:${versions.jetbrainsAnnotations}"

  testImplementation "junit:junit:${versions.junit}"
  testImplementation "org.codehaus.groovy:groovy-all:${versions.groovy}"
  testImplementation "org.spockframework:spock-core:${versions.spock}"
  testImplementation "org.hamcrest:hamcrest-core:${versions.hamcrest}"
  testImplementation "net.bytebuddy:byte-buddy:${versions.byte_buddy}"
  testRuntimeOnly "org.objenesis:objenesis:${versions.objenesis}"

//  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
//  testImplementation 'org.junit.jupiter:junit-jupiter-params:5.3.1'
//  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'

}

application {
  mainClassName = 'net.in.rrrekin.ittoolbox.ItToolboxApplication'
  applicationName = 'it-toolbox'

  def modulePath = configurations.runtimeClasspath.files.collect { "$it.name" }.findAll { it.startsWith('javafx-') }.collect { "\${APP_HOME}/lib/$it" }.join(':')
  applicationDefaultJvmArgs = [
    "--add-modules=${javafxModules.join(',')}",
    "--module-path=$modulePath",
//    '--module-path=APP_HOME/lib',
////            "--add-modules=javafx.controls,javafx.fxml,javafx.graphics",
////            "--add-opens=javafx.base/com.sun.javafx.runtime=org.controlsfx.controls",
////            "--add-opens=javafx.base/com.sun.javafx.collections=org.controlsfx.controls",
////    "--add-opens=javafx.graphics/com.sun.javafx.css=ALL-UNNAMED",
////            "--add-opens=javafx.graphics/com.sun.javafx.scene=org.controlsfx.controls",
////            "--add-opens=javafx.graphics/com.sun.javafx.scene.traversal=org.controlsfx.controls",
////            "--add-opens=javafx.graphics/javafx.scene=org.controlsfx.controls",
////            "--add-opens=javafx.controls/com.sun.javafx.scene.control=org.controlsfx.controls",
////            "--add-opens=javafx.controls/com.sun.javafx.scene.control.behavior=org.controlsfx.controls",
////"--add-exports=javafx.graphics/com.sun.javafx.css=org.controlsfx.controls",
////"--add-exports=javafx.base/com.sun.javafx.event=org.controlsfx.controls",
////"--add-opens=javafx.controls/javafx.scene.control.skin=org.controlsfx.controls",
    "--add-opens=javafx.base/com.sun.javafx.runtime=ALL-UNNAMED",
    "--add-opens=javafx.base/com.sun.javafx.collections=ALL-UNNAMED",
    "--add-opens=javafx.graphics/com.sun.javafx.css=ALL-UNNAMED",
    "--add-opens=javafx.graphics/com.sun.javafx.scene=ALL-UNNAMED",
    "--add-opens=javafx.graphics/com.sun.javafx.scene.traversal=ALL-UNNAMED",
    "--add-opens=javafx.graphics/javafx.scene=ALL-UNNAMED",
    "--add-opens=javafx.graphics/com.sun.javafx.application=ALL-UNNAMED",
    "--add-opens=javafx.graphics/com.sun.glass.ui=ALL-UNNAMED",
    "--add-opens=javafx.controls/com.sun.javafx.scene.control=ALL-UNNAMED",
    "--add-opens=javafx.controls/com.sun.javafx.scene.control.behavior=ALL-UNNAMED",
    "--add-opens=javafx.controls/javafx.scene.control.skin=ALL-UNNAMED",
//    "--add-opens=groovy.all/org.codehaus.groovy=ALL-UNNAMED",
  ]
}

startScripts {
  doLast {
    unixScript.text = unixScript.text.replace('\\${APP_HOME}', '$APP_HOME')
    windowsScript.text = windowsScript.text.replace('${APP_HOME}', '%APP_HOME%')
  }
}

test {
  jvmArgs '--add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED'
}
//test {
//  useJUnitPlatform()
//
//  testLogging {
//    events 'PASSED', 'FAILED', 'SKIPPED'
//  }
//}

// ./gradlew wrapper --gradle-version 5.6.4 --distribution-type all
